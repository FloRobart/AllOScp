Si il y a un bug avec le module GTK il faut l'installé avec la commande suivante : 'sudo apt-get install libcanberra-gtk-module'


/* Fonctionnalitées dans le panelFonctionGlobal */
/*========================================================================================*/
Comparer séléction (Fichier et dossier)
Comparer toute l'arborescence (racine et sous dossier)

Syncroniser séléction de l'arborescence A vers B (Fichier et dossier)
Syncroniser séléction de l'arborescence B vers A (Fichier et dossier)
Syncroniser séléction dans les deux sens (Fichier et dossier)

Syncroniser toute l'arborescence de A vers B (racine et sous dossier)
Syncroniser toute l'arborescence de B vers A (racine et sous dossier)
Syncroniser toute l'arborescence dans les deux sens (racine et sous dossier)

Syncroniser tout en arrière plan (racine et sous dossier)




/* Aide */
/*========================================================================================*/
Files.copy(Path, Path, StandardCopyOption); --> copie le contenue d'un fichier dans un autre fichier (StandardCopyOption.REPLACE_EXISTING pour remplacer le fichier si il existe déjà)
Files.createDirectories(Path);              --> créer un nouveau dossier ainsi que tous les parents inexistant
Files.createFile(Path);                     --> créer un nouveau fichier
Files.delete(Path);                         --> supprimer un fichier
Files.readAllBytes(Path);                   --> lire le contenue d'un fichier byte par byte (vas permettre de comparer les fichiers)

Files.walk(Path);                           --> parcourir un dossier et ses sous dossier
Files.walk(Path, int);                      --> parcourir un dossier et ses sous dossier jusqu'à un certain niveau
Files.walk(Path, int, FileVisitOption);     --> parcourir un dossier et ses sous dossier jusqu'à un certain niveau avec des options (FileVisitOption.FOLLOW_LINKS pour suivre les liens symbolique)

Files.walkFileTree(Path, FileVisitor);      --> parcourir un dossier et ses sous dossier avec un FileVisitor
Files.walkFileTree(Path, Set<FileVisitOption>, int, FileVisitor); --> parcourir un dossier et ses sous dossier avec un FileVisitor et des options (FileVisitOption.FOLLOW_LINKS pour suivre les liens symbolique)

/*========================================================================================*/
java.util.zip.*;                            --> permet d'analyser les fichiers zip
java.util.jar.*;                            --> permet d'analyser les fichiers jar
java.nio.FileSystem;                        --> ??? util pour les zips
java.nio.FileSystems;                       --> que des methodes static qui renvoie des FileSystem
java.io.fileDescriptor;                     --> ???

/*========================================================================================*/
java.util.ConcurrentHashMap<K,​V>;          --> permet de créer une map thread safe

/* Comparaison de fichiers/dossiers */
/*========================================================================================*/
/* Dossier */
Les dossiers sont identiques si les fichiers qu'ils contiennent sont identiques.
Si les dossiers contiennent des sous dossiers, les sous dossiers sont comparés de la même manière.
Si deux dossiers sont identiques, on note juste que les deux dossiers sont identiques.
Si deux dossiers sont différents, on note les fichiers qui sont différents.

/* Fichier */
Les fichiers sont identiques si leur contenue est identique.
Pour comparer les fichiers, on essaie de lire les fichiers ligne par ligne et on compare les lignes, si la lecture du fichier n'est pas possible on compare les fichiers byte par byte.
afficher un résultat simple (identique, différent, erreur) pour chaque fichier puis faire une option détail pour afficher les différences (les lignes différentes).

/* Comparaison */
Fichier | Fichier --> compare le contenue des fichiers
Fichier | Dossier --> compare le contenue des fichiers
(Dossier | Dossier) && même nombre de fichier --> compare les contenue des fichiers + ??? (si les fichiers sont dans le même ordre)
(Dossier | Dossier) && différent nombre de fichier --> ????